pipeline {
    agent any
    tools {
        // Note: this should match with the tool name configured in your jenkins instance (JENKINS_URL/configureTools/)
        maven "Maven"
    }
    environment {
        // This can be nexus3 or nexus2
        NEXUS_VERSION = "nexus3"
        // This can be http or https
        NEXUS_PROTOCOL = "http"
        // Where your Nexus is running
        NEXUS_URL = "ec2-35-154-169-246.ap-south-1.compute.amazonaws.com:8081"
        // Repository where we will upload the artifact
        NEXUS_REPOSITORY = "spring3"
        // Jenkins credential id to authenticate to Nexus OSS
        NEXUS_CREDENTIAL_ID = "nexus_credentials"
    }
    stages {
        stage("clone code") {
            steps {
                script {
                    // Let's clone the source
                    git 'https://github.com/jmstechhome8/spring3-mvc-maven-xml-hello-world.git';
                }
            }
        }
        stage("mvn build") {
            steps {
                script {
				       sh "mvn package"                    
        }
            }
        }
        stage("publish to nexus") {
            steps {
                script {
                    // Read POM xml file using 'readMavenPom' step , this step 'readMavenPom' is included in: https://plugins.jenkins.io/pipeline-utility-steps
                    pom = readMavenPom file: "pom.xml";
                    // Find built artifact under target folder
                    filesByGlob = findFiles(glob: "target/*.${pom.packaging}");
                    // Print some info from the artifact found
                    echo "${filesByGlob[0].name} ${filesByGlob[0].path} ${filesByGlob[0].directory} ${filesByGlob[0].length} ${filesByGlob[0].lastModified}"
                    // Extract the path from the File found
                    artifactPath = filesByGlob[0].path;
                    // Assign to a boolean response verifying If the artifact name exists
                    artifactExists = fileExists artifactPath;
                    if(artifactExists) {
                        echo "*** File: ${artifactPath}, group: ${pom.groupId}, packaging: ${pom.packaging}, version ${pom.version}";
                        nexusArtifactUploader(
                            nexusVersion: NEXUS_VERSION,
                            protocol: NEXUS_PROTOCOL,
                            nexusUrl: NEXUS_URL,
                            groupId: pom.groupId,
                            version: '${BUILD_NUMBER}',
                            repository: NEXUS_REPOSITORY,
                            credentialsId: NEXUS_CREDENTIAL_ID,
                            artifacts: [
                                // Artifact generated such as .jar, .ear and .war files.
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: artifactPath,
                                type: pom.packaging],
                                // Lets upload the pom.xml file for additional information for Transitive dependencies
                                [artifactId: pom.artifactId,
                                classifier: '',
                                file: "pom.xml",
                                type: "pom"]
                            ]
                        );
                    } else {
                        error "*** File: ${artifactPath}, could not be found";
                    }
                }
            }
        }
        
       stage ("deploy"){
	   steps {
        script {
           bat ''' F:\\DevOps\\Softwares\\curl-7.64.0-win64-mingw\\bin\\curl http://localhost:8081/repository/dvs-pipe-spring/com/madhu/spring3-mvc-maven-xml-hello-world/2/spring3-mvc-maven-xml-hello-world-1.war -o F:\\softwares\\apache-tomcat-7.0.53\\webapps\\'''
       }
    }
	}
    }
}

admin


com/madhu/spring3-mvc-maven-xml-hello-world/2/spring3-mvc-maven-xml-hello-world-2.war
com/madhu/spring3-mvc-maven-xml-hello-world/2/spring3-mvc-maven-xml-hello-world-2.war

========================


dlecrative pipeline (2.6+)
Pipeline Utility Steps
Nexus Artifact Uploader

downlaod curl   https://curl.haxx.se/windows/

no shapshot veresion 
version name should be numaric

mon-friday --> 8.30 pm--> 10 pm

 9 pm 10-45
 
 +91-7989775914
 
 sh "curl -v -u  admin:admin -T 'http://35.232.158.108:8081/service/rest/repository/browse/spring3/com/mkyong/spring3-mvc-maven-xml-hello-world'+'/'+{{version}}+'/'+{{artifactPath}} 'http://ec2-54-162-251-197.compute-1.amazonaws.com:8080/manager/text/deploy?path=/mavenpipelineemailnexus&update=true'"
}



 
 
 
 
 
 